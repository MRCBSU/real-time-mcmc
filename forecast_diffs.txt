diff --git a/R/output/mc_midterm_forecast.R b/R/output/mc_midterm_forecast.R
index 4b94e5e5..1d789044 100644
--- a/R/output/mc_midterm_forecast.R
+++ b/R/output/mc_midterm_forecast.R
@@ -8,7 +8,7 @@ require(knitr)
 out.dir <- commandArgs(trailingOnly = TRUE)[1]
 QUANTILES <- c(0.025, 0.5, 0.975)
 ## out.dir <- as.integer(Sys.getenv("SLURM_ARRAY_TASK_ID"))
-if (!is.na(out.dir)) setwd(out.dir)
+setwd(out.dir)
 load("mcmc.RData")
 load("tmp.RData")
 source(file.path(Rfile.loc, "sim_func.R"))
@@ -18,32 +18,21 @@ nweeks.ahead <- 24
 
 counterfactual <- FALSE
 
-projections.basedir <- file.path(out.dir, "projections_MTP")
+projections.basedir <- file.path(out.dir, "projections")
+
 ## ## Enter dates at which it is anticipated that the contact model will change
 ## mm.breaks <- ymd("20201109") + (1:nforecast.weeks * days(7))
 ## ## Forecast projection
 nforecast.weeks <- nweeks.ahead - nforecast.weeks
 mm.breaks <- start.date - 1 + max(cm.breaks) + (1:nforecast.weeks * days(7))
-google.data.date <- ymd(google.data.date)
+google.data.date <- ymd("20201211")
 mult.order <- rep(1, length(mm.breaks))
 sero.flag <- 0 ## Are we interested in simulating serological outputs? Switched off for the moment.
-prev.flag <- 1 ## Are we interested in simulating prevalence outputs?
+prev.flag <- 0 ## Are we interested in simulating prevalence outputs?
 if(prev.flag & (prev.data$lmeans == "NULL")){
-    if (!exists("date.prev")) {
-		## Get the date of the prevalence data
-		date.prev <- ymd("20201119")
-		## Convert that to an analysis day number
-		prev.end.day <- date.prev - start.date + 1
-		last.prev.day <- (prev.end.day - 4)
-		first.prev.day <- 168
-		days.between.prev <- 28
-		## Default system for getting the days on which the likelihood will be calculated.
-		prev.lik.days <- rev(seq(from = last.prev.day, to = first.prev.day, by = -days.between.prev))
-	}
     for(r in 1:nr){
-	  prev.file.prefix <- paste0(data.dirs["prev"], "/", date.prev, "_", paste0(prev.lik.days, collapse = "_"), "_")
-      prev.data$lmeans[r] <- paste0(prev.file.prefix, regions[r], "ons_meanlogprev.txt")
-      prev.data$lsds[r] <- paste0(prev.file.prefix, regions[r], "ons_sdlogprev.txt")
+        prev.data$lmeans[r] <- file.path(data.dirs["prev"], paste0("2020-12-07_", regions[r], "_ons_meanlogprev_286every14.txt"))
+        prev.data$lsds[r] <- file.path(data.dirs["prev"], paste0("2020-12-07_", regions[r], "_ons_sdlogprev_286every14.txt"))
     }
     names(prev.data$lmeans) <- names(prev.data$lsds) <- regions
 }
@@ -95,8 +84,9 @@ end.prev <- ifelse(prev.flag, ndays, 1)
 ## Get the new contact matrices to use
 cm.breaks <- c(cm.breaks, mm.breaks - start.date + 1)
 cm.files <- c(cm.files,
-              paste0("england_8ag_contact_projwk", 1:length(mm.breaks), "_", google.data.date.str, ".txt"))
+              paste0("england_8ag_contact_projwk", 1:length(mm.breaks), "_", format(google.data.date, "%Y%m%d"), ".txt"))
 cm.bases <- file.path(proj.dir, "contact_mats", cm.files)
+matrix.dir <- file.path(dirname(matrix.dir), paste0("google_mobility_relative_matrices_", format(google.data.date, "%Y%m%d")))
 cm.lockdown.fl <- c(cm.lockdown.fl, paste0("England", mm.breaks, "all.csv"))
 cm.lockdown <- c(cm.lockdown,
                  file.path(matrix.dir, tail(cm.lockdown.fl, length(mm.breaks))))
@@ -192,7 +182,7 @@ niter <- min(sapply(params, nrow))
 ## ## For each iteration
 pct <- 0
 ## xtmp <- mclapply(1:niter, sim_rtm, mc.cores = detectCores() - 1)
-if(Sys.info()["user"] %in% c("jbb50", "pjb51")){
+if(Sys.info()["user"] == "pjb51"){
     exe <- "hpc"
 } else exe <- Sys.info()["nodename"]
 cat("rtm.exe = ", exe, "\n")
@@ -239,7 +229,7 @@ if(prev.flag){
     save.list <- c(save.list, "prevalence")
     dimnames(prevalence) <- dim.list
 }
-save(list = save.list, file = "projections_midterm.RData")
+save(list = save.list, file = "projections.RData")
 
 ## ## ## Housekeeping
 lapply(hosp.data, file.remove)
