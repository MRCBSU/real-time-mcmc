#!/bin/bash

#SBATCH --nodes=1
#! How many (MPI) tasks will there be in total? (<= nodes*16)
#SBATCH --ntasks=1
#! How many CPUs will each task require
#SBATCH --cpus-per-task=2
#! How much wallclock time will be required?
#SBATCH --time=0:20:00
#! What types of email messages do you wish to receive?
#SBATCH --mail-type=FAIL,TIME_LIMIT,END
#SBATCH --mail-user=joel.kandiah@phe.gov.uk
#! Uncomment this to prevent the job from being requeued (e.g. if
#! interrupted by node failure or system downtime):
#SBATCH --no-requeue
#SBATCH --verbose
#SBATCH --array=1,3,6,7
#SBATCH --output=submit_save_endstates_%a_%j.out
#SBATCH --error=submit_save_endstates_%a_%j.err

<<<<<<< HEAD
module load R gcc openmp intel_compiler OpenBLAS openmpi slurm
=======
#SBATCH --array=0-11
#SBATCH -p icelake
#!SBATCH --qos=covid0


#SBATCH --output=model_runs_20210120regjobs_%a.out
#SBATCH --error=model_runs_20210120regjobs_%a.err

module purge
module load rhel8/default-icl
>>>>>>> e86404bcb4c44db9b7f42a01256e26898c0470b7

dirs=(*/)
pwd
application="Rscript"
<<<<<<< HEAD
options="~/mcmc/real-time-mcmc/R/output/save_end_state.R"
=======
options="/rds/user/pjb51/hpc-work/project/pandemic_flu/Wuhan_Coronavirus/real-time-mcmc/R/output/save_end_state.R"
>>>>>>> e86404bcb4c44db9b7f42a01256e26898c0470b7
CMD="$application $options ${dirs[SLURM_ARRAY_TASK_ID]}"
# echo "${dirs[SLURM_ARRAY_TASK_ID]}/posterior_report10"
# if [ -e "${dirs[SLURM_ARRAY_TASK_ID]}/posterior_report10" ]; then
#     echo "Running $CMD"
  eval $CMD
  # sbatch 
# fi
