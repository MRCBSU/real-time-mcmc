ll.dat$`Cumulative count`
as.integer(ll.dat$`Cumulative count`)
nrow(ll.dat)
nrow(ll.dat)
sum(is.na(as.integer(ll.dat$`Cumulative count`)))
max(as.integer(ll.dat$`Cumulative count`), na.rm = T))
max(as.integer(ll.dat$`Cumulative count`), na.rm = T)
table(as.integer(ll.dat$`Cumulative count`), na.rm = T)
table(ll.dat$`Cumulative count`)
which(table(ll.dat$`Cumulative count`)>1)
nrow(ll.dat)
head(ll.dat)
ll.dat$Age
library(lubridate)
latest.date <- lubridate::as_date("08/03/2020")
latest.date
?lubridate::as_date
latest.date <- lubridate::as_date("2020-03-08")
latest.date
colnames(ll.dat)
head(ll.dat)
lubridate::as_date(ll.date$`CMO Announce Date`)
lubridate::as_date(ll.data$`CMO Announce Date`)
lubridate::as_date(ll.dat$`CMO Announce Date`)
lubridate::as_date(ll.dat$`CMO Announce Date`, format = "%d/%m/%Y")
as.Date(ll.dat$`CMO Announce Date`, format = "%d/%m/%Y")
ll.dat$Date <- as.Date(ll.dat$`CMO Announce Date`, format = "%d/%m/%Y")
head(ll.dat)
q()
n
q()
n
)
nrow(ll.dat)
ll.dat$Date
table(ll.dat$Date < as.Date("2020-03-08"))
ll.dat$Date < as.Date("2020-03-08")
dim(ll.dat)
head(ll.dat)
earliest.date
nrow(ll.dat)
colnames(ll.dat)
table(is.na(ll.dat$Age))
cbind(ll.dat$Age, cut(ll.dat$Age, breaks = c(age.grps, Inf), right = FALSE))
class(ll.dat$Age)
ll.dat$Age <- as.numeric(ll.dat$Age)
ll.dat$Age
length(ll.dat$Age)
ll.dat[267, ]
rlang::last_error()
?dplyr::aggregate
?aggregate
library(tidyr)
?n
dim(rtm.dat)
rtm.dat
rtm.dat
earliest.date
q()
n
rtm.dat
library(readr)
library(dplyr)
library(lubridate)

ll.dat <- read_csv("~/stats_drive/COVID-19/LineList/Copy of 20200312 09.00h- Anonymised Linelist of UK Cases (Cumulative).csv")

age.grps <- c(0, 5, 15, 25, 45, seq(60, 80, by = 10))
age.labs <- c("<5yr", "5-14", "15-24", "25-44", "45-59", "60-69", "70-79", "80+")

library(readr)
library(dplyr)
library(lubridate)

ll.dat <- read_csv("~/stats_drive/COVID-19/LineList/Copy of 20200312 09.00h- Anonymised Linelist of UK Cases (Cumulative).csv")

age.grps <- c(0, 5, 15, 25, 45, seq(60, 80, by = 10))
age.labs <- c("<5yr", "5-14", "15-24", "25-44", "45-59", "60-69", "70-79", "80+")
latest.date <- lubridate::as_date("2020-03-08")

ll.dat <- ll.dat %>%
    filter(!is.na(as.integer(`Cumulative count`))) %>%
    mutate(Date = as.Date(`CMO Announce Date`, format = "%d/%m/%Y")) %>%
    filter(!is.na(Date)) %>%
    filter(Date <= latest.date)
head(ll.dat)
table(ll.dat$Date)
table(ll.dat$Date)
table(ll.dat$Date)
table(ll.dat$Date)
table(ll.dat$Date)
rtm.dat
rtm.dat
earliest.date:latest.date
?factor
seq(earliest.date, latest.date, by = 1)
seq(earliest.date, latest.date)
)
rtm.dat
)
rtm.dat
?as.factor
rtm.dat$fDate
?levels
x <- gl(2, 4,8)
x
levels(x)[1] <- "low"
levels(x)[2] <- "high"
x
x <- gl(2, 4, 8)
levels <- 1:3
x
levels(x) <- 1:3
x
x <- c(rep(1, 4), rep(3, 4))
(x <- as.factor(x))
levels(x) <- 1:3
x
?group_by
rtm.dat
levels(rtm.dat$fDate) <- c(levels(rtm.dat$fDate), seq(earliest.date - 14, earliest.date, by = 1))
rtm.dat$fDate
seq(earliest.date - 14, earliest.date, by = 1)
levels(rtm.dat$fDate) <- c(levels(rtm.dat$fDate), as.character(seq(earliest.date - 14, earliest.date, by = 1)))
levels(rtm.dat$fDate) <- c(levels(rtm.dat$fDate), as.character(seq(earliest.date - 14, earliest.date, by = 1)))
rtm.dat$fDate
order(levels(rtm.dat$fDate))
head(ll.dat)
ll.dat$Date
class(ll.dat$Date)
?group_by
tbl
tbl %>% group_by(y)
tbl %>% group_by(y) %>% summarise(count = n())
group_by_drop_default()
tbl %>% group_by(y, .drop = FALSE) %>% summarise(count = n())
range(ll.dat$Date)
factor(ll.dat$Date)
ll.dat$fDate
rtm.dat
rtm.dat[20, ]
?levels
?reorder
require(graphics)
head(InsectSprays)
InsectSprays[1:25, ]
with(InsectSprays, reorder(spray, count, median))
q()
n
source("format_linelist.R")
rtm.dat
rtm.dat$fDate <- lubridate::as_date(rtm.dat$fDate)
rtm.dat
rtm.dat
Sys.Date()
grep("-", "", Sys.Date())
grep("\-", "", Sys.Date())
grep("\\-", "", Sys.Date())
grep("\\\-", "", Sys.Date())
grep("\\\\-", "", Sys.Date())
grep("-", "", as.character(Sys.Date()))
as.character(Sys.Date())
gsub("-", "", as.character(Sys.Date()))
gsub("-", "", Sys.Date())
?write
?write.table
q()
n
source("format_linelist.R")
cur.dir <- getwd()
setwd("/home/phe.gov.uk/paul.birrell/Documents/PHE/stats/Wuhan 2019 Coronavirus/Data/population")
source("get_popn.R")
setwd(cur.dir)

ls()
pop
dim(pop)
colnames(pop)
pop$Geography1
pop$Name[1:5]
ls()
dim(regions.short)
regions.short
regions
colnames(pop)
pop[pop$Name == "UNITED KINGDOM", -c(1:4)]
UK.pop
as.integer(gsub(",","",pop[pop$Name == "UNITED KINGDOM", -(1:4)]))
as.integer(gsub(",","",pop[pop$Name == "UNITED KINGDOM", -(1:4)], fixed = TRUE))
pop[pop$Name == "UNITED KINGDOM", -(1:4)]
gsub(",","",pop[pop$Name == "UNITED KINGDOM", -(1:4)])
gsub(",","",pop[pop$Name == "UNITED KINGDOM", -(1:4)], fixed = TRUE)
as.character(pop[pop$Name == "UNITED KINGDOM", -(1:4)])
pop[pop$Name == "UNITED KINGDOM", -(1:4)]
is.factor(pop[pop$Name == "UNITED KINGDOM", -(1:4)])
class(pop[pop$Name == "UNITED KINGDOM", -(1:4)])
unlist(pop[pop$Name == "UNITED KINGDOM", -(1:4)])
as.character(unlist(pop[pop$Name == "UNITED KINGDOM", -(1:4)]))
gsub(",","",as.character(unlist(pop[pop$Name == "UNITED KINGDOM", -(1:4)])))
as.integer(gsub(",","",as.character(unlist(pop[pop$Name == "UNITED KINGDOM", -(1:4)]))))
q()
n
source("format_linelist.R")
q()
n
latest.date <- lubridate::as_date("20200313")
latest.date
source("format_linelist.R")
q()
n
library(readr)

date.data <- "20200312"
ff.dat <- read_csv(paste0("~/Documents/PHE/stats/Wuhan 2019 Coronavirus/Epidemic_growth/UK/adjusted_cases_", date.data, ".csv"))
cur.dir <- getwd()
setwd("/home/phe.gov.uk/paul.birrell/Documents/PHE/stats/Wuhan 2019 Coronavirus/Data/population")
source("get_popn.R")
setwd(cur.dir)
UK.pop <- sum(as.integer(gsub(",","",as.character(unlist(pop[pop$Name == "UNITED KINGDOM", -(1:4)])))))

ff.dat
?summarise
q()
n
getwd()
source("format_ff100.R")
q()
n
source("format_ff100.R")
q()
n
source("format_ff100.R")
rtm.dat
rtm.dat[, 2]
rtm.dat[1:23, 2]
rtm.dat[10:20, 2]
rtm.dat[21:23, 2]
rtm.dat[21:23, 1]
lubridate::as_date(rtm.dat[, 1])
rtm.dat$fDate <- lubridate::as_date(rtm.date$fDate)
rtm.dat$fDate <- lubridate::as_date(rtm.dat$fDate)
q()
n
source("format_ff100.R")
rtm.dat
q()
n
source("format_ff100.R")
q()
n
