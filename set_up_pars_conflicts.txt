diff --git a/set_up_pars.R b/set_up_pars.R
index 30552003..a08aebfb 100644
--- a/set_up_pars.R
+++ b/set_up_pars.R
@@ -1,3 +1,10 @@
+add.extra.vals.per.region <- function(vec, val, num) {
+  mat <- matrix(vec, ncol = nr)
+  rows.to.add <- nbetas - length(vec) / nr
+  mat.new <- matrix(val, nrow = rows.to.add, ncol = nr)
+  return(rbind(mat, mat.new))
+}
+
 logit <- function(p) log(p/(1-p))
 expit <- function(x) exp(x)/(1+exp(x))
 
@@ -26,6 +33,26 @@ if(prev.prior == "relax") pars.r1 <- c(5.5, 1)
 if(prev.prior == "long_positive") pars.r1 <- c(11.7, 0.903)
 if(prev.prior == "Cevik") pars.r1 <- c(32.2, 2.60)
 
+## Efficacy against disease from one vaccine dose
+value.vac.alpha1 <- 0.8
+prior.vac.alpha1 <- ifelse(vacc.flag, 3, 1)
+if(vacc.flag) pars.alpha1 <- c(4, 1)
+
+## Efficacy against disease from one vaccine dose
+value.vac.alpha2 <- 0.95
+prior.vac.alpha2 <- ifelse(vacc.flag, 3, 1)
+if(vacc.flag) pars.alpha2 <- c(4, 1)
+
+## Efficacy against disease from one vaccine dose
+value.vac.pi1 <- 0.8
+prior.vac.pi1 <- ifelse(vacc.flag, 3, 1)
+if(vacc.flag) pars.pi1 <- c(4, 1)
+
+## Efficacy against disease from one vaccine dose
+value.vac.pi2 <- 0.95
+prior.vac.pi2 <- ifelse(vacc.flag, 3, 1)
+if(vacc.flag) pars.pi2 <- c(4, 1)
+
 ## Exponential growth rate
 value.egr <- c(0.281224110810985, 0.246300679874443, 0.230259384150778, 0.307383663711624, 0.249492140587071, 0.224509782739688, 0.234528728809235, 0.2, 0.2)[1:nr]
 pars.egr <- c(31.36, 224)
@@ -60,7 +87,7 @@ if(!gp.flag | nA == 1){
             pivot_longer(-Age, names_to = "Region") %>%
             inner_join(ll.prior) %>%
             mutate(p = npos / value) %>%
-            arrange(Region, Age)    
+            arrange(Region, Age)
         ## Weighted regression
         ex6 <- suppressWarnings(glm(p~Region + Age + log(nbar),
                                     weights = value,
@@ -86,7 +113,7 @@ if(!gp.flag | nA == 1){
             value.pgp <- jitter(ex6$coefficients[-nl])
             pars.pgp <- as.vector(t(cbind(ex6$coefficients[-nl], round(vcov(ex6)[-nl,-nl], digits = 5))))
             mex6 <- model.matrix(ex6)[,-nl]
-        }   
+        }
     } else {
         reg.mod.loc <- file.path(dirname(proj.dir), "Pillar2", "ascertatinment_regs.RData")
         load(reg.mod.loc)
@@ -230,7 +257,7 @@ if(grepl("newOtoD", scenario.name, fixed = TRUE)){
     ddelay.mean <- 9.3
     ddelay.sd <- 9.7
 }
-    
+
 ## Reporting delay on the deaths
 ## First, write down Tom's cdf for the delay distribution function
 F <- c(0, 0.0581397, 0.3410914, 0.5708017, 0.7027247, 0.7794353, 0.8213025, 0.8516836, 0.8770857, 0.8940002, .9123456, 0.924536, .9387407, .9544153, .9685447, .9821035, .9868954, .991038, 1)
@@ -310,9 +337,9 @@ if(rw.flag){
 }
 ## ## End of contact model ##
 
-# Using 31 here means that each Friday an extra break will be added 4.5 weeks before the Friday in question
-## beta.breaks <- cm.breaks[cm.breaks <= (ymd(date.data) - start.date - 25)][-1] ## Josh's version
+## beta.breaks <- cm.breaks[cm.breaks <= (ymd(date.data) - start.date - time.to.last.breakpoint)][-1] ## Josh's version
 beta.breaks <- cm.breaks[cm.breaks <= (ndays - (7 * nforecast.weeks) - time.to.last.breakpoint)][-1] ## Paul's version
+
 nbetas <- length(beta.breaks) + 1
 beta.rw.vals <- c(
     0, 0.157278692089345, 0.100224366819243, -0.00751722586102982, 0.242453478585049, 0.115532807450752, -0.0739340379686089, -0.253747153954472, -0.154515402774888, -0.0116745847409388, 0.178320412236642, -0.121550440418646, 0.136056150333538, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
@@ -329,14 +356,18 @@ beta.update <- TRUE
 beta.rw.flag <- TRUE
 ## beta.rw.props <- rep(c(0, rep(0.0005, nbetas - 1)), nr)
 beta.rw.props <- c(
-    0.000000, 0.000011, 0.000012, 0.000020, 0.000038, 0.000053, 0.000090, 0.000114, 0.000344, 0.000958, 0.001271, 0.005583, 0.011967, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
-    0.000000, 0.000019, 0.000047, 0.000067, 0.000065, 0.000125, 0.000161, 0.000290, 0.000677, 0.001589, 0.003719, 0.005959, 0.010296, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
-    0.000000, 0.000003, 0.000007, 0.000011, 0.000016, 0.000020, 0.000059, 0.000101, 0.000157, 0.000436, 0.001271, 0.004388, 0.008550, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
-    0.000000, 0.000005, 0.000008, 0.000008, 0.000023, 0.000030, 0.000063, 0.000131, 0.000279, 0.000616, 0.001303, 0.004852, 0.009842, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
-    0.000000, 0.000006, 0.000008, 0.000012, 0.000023, 0.000027, 0.000056, 0.000119, 0.000272, 0.000384, 0.001462, 0.004730, 0.013297, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
-    0.000000, 0.000012, 0.000015, 0.000022, 0.000034, 0.000033, 0.000079, 0.000138, 0.000316, 0.000654, 0.001155, 0.003663, 0.012773, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
-    0.000000, 0.000018, 0.000033, 0.000067, 0.000120, 0.000247, 0.000245, 0.000519, 0.001663, 0.002612, 0.006823, 0.007852, 0.010879, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02
-)[1:(nbetas*nr)]
+    0.000000, 0.000011, 0.000012, 0.000020, 0.000038, 0.000053, 0.000090, 0.000114, 0.000344, 0.000958, 0.001271, 0.005583, 0.011967, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000019, 0.000047, 0.000067, 0.000065, 0.000125, 0.000161, 0.000290, 0.000677, 0.001589, 0.003719, 0.005959, 0.010296, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000003, 0.000007, 0.000011, 0.000016, 0.000020, 0.000059, 0.000101, 0.000157, 0.000436, 0.001271, 0.004388, 0.008550, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000005, 0.000008, 0.000008, 0.000023, 0.000030, 0.000063, 0.000131, 0.000279, 0.000616, 0.001303, 0.004852, 0.009842, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000006, 0.000008, 0.000012, 0.000023, 0.000027, 0.000056, 0.000119, 0.000272, 0.000384, 0.001462, 0.004730, 0.013297, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000012, 0.000015, 0.000022, 0.000034, 0.000033, 0.000079, 0.000138, 0.000316, 0.000654, 0.001155, 0.003663, 0.012773, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000012, 0.000015, 0.000022, 0.000034, 0.000033, 0.000079, 0.000138, 0.000316, 0.000654, 0.001155, 0.003663, 0.012773, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000012, 0.000015, 0.000022, 0.000034, 0.000033, 0.000079, 0.000138, 0.000316, 0.000654, 0.001155, 0.003663, 0.012773, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02,
+    0.000000, 0.000018, 0.000033, 0.000067, 0.000120, 0.000247, 0.000245, 0.000519, 0.001663, 0.002612, 0.006823, 0.007852, 0.010879, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02
+)
+beta.rw.props <- add.extra.vals.per.region(beta.rw.props, 0.02, nbetas * nr)
+if (length(beta.rw.props) > nbetas*nr) beta.rw.props <- beta.rw.props[nbetas*nr]
 beta.design <- matrix(1, nbetas, nbetas)
 for(i in 1:(nbetas-1))
     for(j in (i+1):nbetas)
